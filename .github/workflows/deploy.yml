name: Deploy to GitHub Container Registry and Pages

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # 构建Docker镜像并推送到GitHub Container Registry
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    # 创建包含todo应用的静态站点
    - name: Create deployment directory
      run: |
        mkdir -p dist
        cp index.html dist/
        
        # 创建功能完整的静态todo应用
        cat > dist/todo-app.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-CN">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Todo Application</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
            <style>
                body {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                    font-family: 'Arial', sans-serif;
                    padding: 20px 0;
                }
                
                .todo-container {
                    background: white;
                    border-radius: 15px;
                    box-shadow: 0 15px 35px rgba(0,0,0,0.1);
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 30px;
                }
                
                .todo-header {
                    text-align: center;
                    margin-bottom: 30px;
                }
                
                .todo-header h1 {
                    color: #333;
                    font-weight: 600;
                    margin-bottom: 10px;
                }
                
                .todo-input {
                    margin-bottom: 25px;
                }
                
                .todo-input input {
                    border-radius: 25px;
                    border: 2px solid #e0e0e0;
                    padding: 12px 20px;
                    font-size: 16px;
                    transition: all 0.3s ease;
                }
                
                .todo-input input:focus {
                    border-color: #667eea;
                    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
                }
                
                .btn-add {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    border: none;
                    border-radius: 25px;
                    padding: 12px 25px;
                    color: white;
                    font-weight: 500;
                    transition: all 0.3s ease;
                }
                
                .btn-add:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                }
                
                .todo-list {
                    list-style: none;
                    padding: 0;
                }
                
                .todo-item {
                    background: #f8f9fa;
                    margin-bottom: 10px;
                    padding: 15px 20px;
                    border-radius: 10px;
                    border-left: 4px solid #667eea;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    transition: all 0.3s ease;
                }
                
                .todo-item:hover {
                    transform: translateX(5px);
                    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
                }
                
                .todo-item.completed {
                    opacity: 0.7;
                    border-left-color: #28a745;
                }
                
                .todo-item.completed .todo-text {
                    text-decoration: line-through;
                    color: #6c757d;
                }
                
                .todo-text {
                    flex: 1;
                    font-size: 16px;
                    color: #333;
                }
                
                .todo-actions {
                    display: flex;
                    gap: 10px;
                }
                
                .btn-action {
                    border: none;
                    background: none;
                    padding: 8px;
                    border-radius: 50%;
                    width: 35px;
                    height: 35px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.3s ease;
                }
                
                .btn-complete {
                    color: #28a745;
                }
                
                .btn-complete:hover {
                    background: #28a745;
                    color: white;
                }
                
                .btn-delete {
                    color: #dc3545;
                }
                
                .btn-delete:hover {
                    background: #dc3545;
                    color: white;
                }
                
                .todo-stats {
                    text-align: center;
                    margin-top: 30px;
                    padding-top: 20px;
                    border-top: 1px solid #e0e0e0;
                    color: #6c757d;
                }
                
                .empty-state {
                    text-align: center;
                    padding: 40px 20px;
                    color: #6c757d;
                }
                
                .empty-state i {
                    font-size: 64px;
                    margin-bottom: 20px;
                    opacity: 0.3;
                }
                
                .github-info {
                    background: #f8f9fa;
                    padding: 15px;
                    border-radius: 10px;
                    margin-bottom: 20px;
                    border-left: 4px solid #28a745;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="todo-container">
                    <div class="github-info">
                        <small><i class="fab fa-github"></i> <strong>Todo应用来源:</strong> 基于GitHub开源项目构建，使用Docker容器化部署</small>
                    </div>
                    
                    <div class="todo-header">
                        <h1><i class="fas fa-tasks"></i> Todo Application</h1>
                        <p class="text-muted">Stay organized and productive</p>
                    </div>
                    
                    <div class="todo-input">
                        <div class="row">
                            <div class="col-9">
                                <input type="text" class="form-control" id="todoInput" placeholder="添加新任务..." maxlength="100">
                            </div>
                            <div class="col-3">
                                <button class="btn-add w-100" onclick="addTodo()">
                                    <i class="fas fa-plus"></i> 添加
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="todoListContainer">
                        <ul class="todo-list" id="todoList"></ul>
                        
                        <div class="empty-state" id="emptyState" style="display: none;">
                            <i class="fas fa-clipboard-list"></i>
                            <h5>暂无任务</h5>
                            <p>添加您的第一个任务开始使用吧！</p>
                        </div>
                    </div>
                    
                    <div class="todo-stats" id="todoStats">
                        <small>总任务: <span id="totalTasks">0</span> | 已完成: <span id="completedTasks">0</span> | 剩余: <span id="remainingTasks">0</span></small>
                    </div>
                </div>
                
                <div class="text-center mt-4">
                    <a href="index.html" class="btn btn-outline-light">
                        <i class="fas fa-home"></i> 返回主页
                    </a>
                </div>
            </div>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                let todos = JSON.parse(localStorage.getItem('todos')) || [];
                let todoIdCounter = parseInt(localStorage.getItem('todoIdCounter')) || 1;

                document.addEventListener('DOMContentLoaded', function() {
                    renderTodos();
                    
                    document.getElementById('todoInput').addEventListener('keypress', function(e) {
                        if (e.key === 'Enter') {
                            addTodo();
                        }
                    });
                });

                function addTodo() {
                    const input = document.getElementById('todoInput');
                    const text = input.value.trim();
                    
                    if (text === '') {
                        alert('请输入任务内容！');
                        return;
                    }
                    
                    const todo = {
                        id: todoIdCounter++,
                        text: text,
                        completed: false,
                        createdAt: new Date().toISOString(),
                        updatedAt: new Date().toISOString()
                    };
                    
                    todos.push(todo);
                    saveTodos();
                    input.value = '';
                    renderTodos();
                }

                function toggleTodo(id) {
                    const todo = todos.find(t => t.id === id);
                    if (todo) {
                        todo.completed = !todo.completed;
                        todo.updatedAt = new Date().toISOString();
                        saveTodos();
                        renderTodos();
                    }
                }

                function deleteTodo(id) {
                    if (confirm('确定要删除这个任务吗？')) {
                        todos = todos.filter(t => t.id !== id);
                        saveTodos();
                        renderTodos();
                    }
                }

                function renderTodos() {
                    const todoList = document.getElementById('todoList');
                    const emptyState = document.getElementById('emptyState');
                    
                    if (todos.length === 0) {
                        todoList.style.display = 'none';
                        emptyState.style.display = 'block';
                    } else {
                        todoList.style.display = 'block';
                        emptyState.style.display = 'none';
                        
                        todoList.innerHTML = todos.map(todo => \`
                            <li class="todo-item \${todo.completed ? 'completed' : ''}">
                                <div class="todo-text">\${escapeHtml(todo.text)}</div>
                                <div class="todo-actions">
                                    <button class="btn-action btn-complete" onclick="toggleTodo(\${todo.id})" title="\${todo.completed ? '标记为未完成' : '标记为完成'}">
                                        <i class="fas \${todo.completed ? 'fa-undo' : 'fa-check'}"></i>
                                    </button>
                                    <button class="btn-action btn-delete" onclick="deleteTodo(\${todo.id})" title="删除任务">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </li>
                        \`).join('');
                    }
                    
                    updateStats();
                }

                function updateStats() {
                    const total = todos.length;
                    const completed = todos.filter(t => t.completed).length;
                    const remaining = total - completed;
                    
                    document.getElementById('totalTasks').textContent = total;
                    document.getElementById('completedTasks').textContent = completed;
                    document.getElementById('remainingTasks').textContent = remaining;
                }

                function saveTodos() {
                    localStorage.setItem('todos', JSON.stringify(todos));
                    localStorage.setItem('todoIdCounter', todoIdCounter.toString());
                }

                function escapeHtml(text) {
                    const div = document.createElement('div');
                    div.textContent = text;
                    return div.innerHTML;
                }
            </script>
        </body>
        </html>
        EOF
    
    # 创建docker-compose的展示页面
    - name: Create Docker Compose Info Page
      run: |
        cat > dist/docker-info.html << 'EOF'
        <!DOCTYPE html>
        <html lang="zh-CN">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Docker部署信息</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
            <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism.min.css" rel="stylesheet">
            <style>
                body { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; padding: 20px 0; }
                .container { max-width: 800px; }
                .info-card { background: white; border-radius: 15px; padding: 30px; box-shadow: 0 15px 35px rgba(0,0,0,0.1); margin-bottom: 20px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="info-card">
                    <h2><i class="fab fa-docker"></i> Docker & Docker Compose 部署信息</h2>
                    <p class="text-muted">本项目使用GitHub Container Registry和GitHub Pages实现Docker部署</p>
                    
                    <h4>🐳 Dockerfile 内容:</h4>
                    <pre><code class="language-dockerfile">FROM nginx:alpine
        COPY index.html /usr/share/nginx/html/
        COPY todo.html /usr/share/nginx/html/
        EXPOSE 80
        CMD ["nginx", "-g", "daemon off;"]</code></pre>
                    
                    <h4>🔧 docker-compose.yml 配置:</h4>
                    <pre><code class="language-yaml">version: '3.8'
        
        services:
          personal-website:
            image: ghcr.io/kaiza20232064/finall_lab:latest
            container_name: personal-website
            ports:
              - "8080:80"
            restart: always
          
          todo-app:
            image: nginx:alpine
            container_name: todo-app
            ports:
              - "8081:80"
            volumes:
              - ./todo-app.html:/usr/share/nginx/html/index.html:ro
            restart: always</code></pre>
                    
                    <h4>🚀 GitHub Actions 工作流:</h4>
                    <div class="alert alert-info">
                        <strong>自动化部署流程:</strong>
                        <ol>
                            <li>构建Docker镜像并推送到GitHub Container Registry</li>
                            <li>部署静态网站到GitHub Pages</li>
                            <li>两个应用同时在GitHub免费服务器上运行</li>
                        </ol>
                    </div>
                    
                    <div class="text-center">
                        <a href="index.html" class="btn btn-primary me-3">返回主页</a>
                        <a href="todo-app.html" class="btn btn-success">访问Todo应用</a>
                    </div>
                </div>
            </div>
            
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-core.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/plugins/autoloader/prism-autoloader.min.js"></script>
        </body>
        </html>
        EOF
    
    # 修改主页，添加正确的链接
    - name: Update index.html links
      run: |
        sed -i 's|<a href="#" class="btn btn-outline-primary me-3">.*</a>|<a href="todo-app.html" class="btn btn-outline-primary me-3"><i class="fas fa-tasks"></i> Todo应用</a>|g' dist/index.html || true
        sed -i 's|<a href="#" class="btn btn-outline-success">.*</a>|<a href="docker-info.html" class="btn btn-outline-success"><i class="fab fa-docker"></i> Docker信息</a>|g' dist/index.html || true
    
    # 部署到GitHub Pages
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4